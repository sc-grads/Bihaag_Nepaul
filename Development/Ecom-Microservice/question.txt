i have a fast api app that was spread into a microservices:

under an ecom-microservice root folder:
ðŸ“¦auth_service
 â”£ ðŸ“‚app
 â”£ â”£ ðŸ“œ __init__.py
 â”ƒ â”£ ðŸ“œdatabase.py
 â”ƒ â”£ ðŸ“œmain.py
 â”ƒ â”£ ðŸ“œmodels.py
 â”ƒ â”£ ðŸ“œschemas.py
 â”ƒ â”— ðŸ“œauth.py
 â”£ ðŸ“œrequirements.txt
 â”— ðŸ“œDockerfile

ðŸ“¦product_service
 â”£ ðŸ“‚app
 â”ƒ â”£ ðŸ“œdatabase.py
 â”ƒ â”£ ðŸ“œmain.py
 â”ƒ â”£ ðŸ“œmodels.py
 â”ƒ â”— ðŸ“œschemas.py
 â”£ ðŸ“‚uploaded_images
 â”ƒ â”— ðŸ“œpasta_Jack-to-javck.jpg
 â”£ ðŸ“œDockerfile
 â”£ ðŸ“œproduct.db
 â”— ðŸ“œrequirements.txt



 ðŸ“¦seller_service
 â”£ ðŸ“‚app
 â”ƒ â”£ ðŸ“œdatabase.py
 â”ƒ â”£ ðŸ“œmain.py
 â”ƒ â”£ ðŸ“œmodels.py
 â”ƒ â”£ ðŸ“œschemas.py
 â”ƒ â”— ðŸ“œseller.py
 â”£ ðŸ“œ Dockerfile
 â”£ ðŸ“œ product.db
 â”— ðŸ“œ requirements.txt


ðŸ“¦nginx
 â”£ ðŸ“œDockerfile
 â”— ðŸ“œnginx.conf


ðŸ“¦templates
 â”£ ðŸ“œbase.html
 â”£ ðŸ“œindex.html
 â”£ ðŸ“œlogin.html
 â”£ ðŸ“œproduct_edit.html
 â”£ ðŸ“œproduct_form.html
 â”£ ðŸ“œproduct_list.html
 â”— ðŸ“œregister.html


docker-compose.yml

with the current docker compose that exists in my root folder, it runs all the microservices in each respective container:

version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./templates:/usr/share/nginx/html:ro
    depends_on:
      - auth_service
      - product_service
      - seller_service
    networks:
      - ecommerce-network

  auth_service:
    build:
      context: ./auth_service
    expose:
      - "8000"
    environment:
      - DATABASE_URL=sqlite:///./auth.db
    volumes:
      - ./auth_service:/app
    networks:
      - ecommerce-network

  product_service:
    build:
      context: ./product_service
    expose:
      - "8000"
    environment:
      - DATABASE_URL=sqlite:///./product.db
    volumes:
      - ./product_service:/app
      - ./product_service/uploaded_images:/app/uploaded_images
    networks:
      - ecommerce-network

  seller_service:
    build:
      context: ./seller_service
    expose:
      - "8000"
    environment:
      - DATABASE_URL=sqlite:///./seller.db
    volumes:
      - ./seller_service:/app
    networks:
      - ecommerce-network

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: fastapi
      POSTGRES_PASSWORD: fastapipassword
      POSTGRES_DB: ecommerce_db
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - ecommerce-network

networks:
  ecommerce-network:
    driver: bridge

//i have a problem linking the user interfaces in the templates folder,
 not sure how to run the front end and link them to the microservices