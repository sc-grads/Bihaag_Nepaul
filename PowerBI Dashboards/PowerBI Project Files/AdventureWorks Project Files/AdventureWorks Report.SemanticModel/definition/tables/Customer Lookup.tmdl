table 'Customer Lookup'
	excludeFromModelRefresh
	lineageTag: b9d62a41-60c3-4ffe-a846-69d7e1fe3408

	measure 'Full Name (Customer Detail)' =
			
			IF(
			    HASONEVALUE(
			        'Customer Lookup'[CustomerKey]
			    ),
			    MAX(
			        'Customer Lookup'[Full Name]
			    ),
			    "Multiple Customers"
			)
		lineageTag: 029a0568-d5a4-453b-a095-22fae55ce6c5

	column CustomerKey
		dataType: int64
		isKey
		formatString: 0
		lineageTag: 97b5232c-1a9b-4426-ad2b-0231a0f8c9da
		summarizeBy: none
		sourceColumn: CustomerKey

		annotation SummarizationSetBy = Automatic

	column Prefix
		dataType: string
		lineageTag: 48dfba18-4c18-45e1-a137-9c23e02ddc08
		summarizeBy: none
		sourceColumn: Prefix

		annotation SummarizationSetBy = Automatic

	column FirstName
		dataType: string
		lineageTag: a264472d-ef35-4e3d-bcff-8c87858d3cef
		summarizeBy: none
		sourceColumn: FirstName

		annotation SummarizationSetBy = Automatic

	column LastName
		dataType: string
		lineageTag: ec7e8194-9de1-420f-b0b8-ffd3c7c8d190
		summarizeBy: none
		sourceColumn: LastName

		annotation SummarizationSetBy = Automatic

	column BirthDate
		dataType: dateTime
		formatString: Long Date
		lineageTag: 4afb9910-78a6-4240-ad91-5038c87e9edc
		summarizeBy: none
		sourceColumn: BirthDate

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column MaritalStatus
		dataType: string
		lineageTag: c91e739a-4502-46dd-9277-d39e671f0908
		summarizeBy: none
		sourceColumn: MaritalStatus

		annotation SummarizationSetBy = Automatic

	column Gender
		dataType: string
		lineageTag: 3e6a5313-d9d1-4387-928b-018eb42bfe33
		summarizeBy: none
		sourceColumn: Gender

		annotation SummarizationSetBy = Automatic

	column EmailAddress
		dataType: string
		lineageTag: 46ae6b40-a3ac-4e04-af9c-9233b11954f8
		summarizeBy: none
		sourceColumn: EmailAddress

		annotation SummarizationSetBy = Automatic

	column AnnualIncome
		dataType: int64
		formatString: 0
		lineageTag: 1facb5a8-e7a9-4999-8ef5-3c7e12d8f538
		summarizeBy: none
		sourceColumn: AnnualIncome

		annotation SummarizationSetBy = Automatic

	column TotalChildren
		dataType: int64
		formatString: 0
		lineageTag: 81015f89-0421-46a0-b108-359c466a7b15
		summarizeBy: none
		sourceColumn: TotalChildren

		annotation SummarizationSetBy = Automatic

	column EducationLevel
		dataType: string
		lineageTag: 8aa8cd06-c53b-4112-a712-7978f1abd0cf
		summarizeBy: none
		sourceColumn: EducationLevel

		annotation SummarizationSetBy = Automatic

	column Occupation
		dataType: string
		lineageTag: b6e116e1-a860-46a8-b8f6-90141b1f980c
		summarizeBy: none
		sourceColumn: Occupation

		annotation SummarizationSetBy = Automatic

	column HomeOwner
		dataType: string
		lineageTag: e87ed469-309e-43f3-b983-1c7834e014e8
		summarizeBy: none
		sourceColumn: HomeOwner

		annotation SummarizationSetBy = Automatic

	column 'Full Name'
		dataType: string
		lineageTag: e724c1e2-2826-42b7-aa10-bb2d433c725d
		summarizeBy: none
		sourceColumn: Full Name

		annotation SummarizationSetBy = Automatic

	column 'Domain Name'
		dataType: string
		lineageTag: 25ee1260-50ac-403a-b6ef-a343f49d506e
		summarizeBy: none
		sourceColumn: Domain Name

		annotation SummarizationSetBy = Automatic

	column 'Is Parent?' =
			
			IF(
			    'Customer Lookup'[TotalChildren] > 0,
			    "Yes",
			    "No"
			)
		dataType: string
		lineageTag: 91f16e23-a4d1-45ea-afe0-ed252b138c61
		summarizeBy: none
		isDataTypeInferred

		annotation SummarizationSetBy = Automatic

	column 'Customer Priority' =
			
			IF(
			    'Customer Lookup'[Is Parent?] = "Yes" &&
			    'Customer Lookup'[AnnualIncome] > 100000,
			    "Priority",
			    "Standard"
			)
		dataType: string
		lineageTag: 51502fbd-d9b6-47fd-a1db-622165bbf6eb
		summarizeBy: none
		isDataTypeInferred

		annotation SummarizationSetBy = Automatic

	column 'Income Level' =
			
			IF('Customer Lookup'[AnnualIncome] >= 150000, "Very High",
			IF('Customer Lookup'[AnnualIncome] >= 100000, "High",
			IF('Customer Lookup'[AnnualIncome] >= 50000, "Average",
			"Low")))
		dataType: string
		lineageTag: ac8a98c9-16ff-429d-a98b-a0992e254899
		summarizeBy: none
		isDataTypeInferred

		annotation SummarizationSetBy = Automatic

	column 'Education Category' = ```
			
			SWITCH(
			    'Customer Lookup'[EducationLevel],
			    "High School", "High School",
			    "Partial High School", "High School",
			    "Bachelors", "Undergrad",
			    "Partial College", "Undergrad",
			    "Graduate Degree", "Graduate"
			)
			
			```
		dataType: string
		lineageTag: f6d1ea55-fb27-410d-811f-9da85ccc51dc
		summarizeBy: none
		isDataTypeInferred

		annotation SummarizationSetBy = Automatic

	column 'Customer Full Name (CC)' =
			
			'Customer Lookup'[Prefix] & " " & 'Customer Lookup'[FirstName] & " " & 'Customer Lookup'[LastName]
		dataType: string
		lineageTag: 31aec94d-c7bc-412f-a45a-db543997264b
		summarizeBy: none
		isDataTypeInferred

		annotation SummarizationSetBy = Automatic

	column 'Birth Year' =
			
			YEAR(
			    'Customer Lookup'[BirthDate]
			)
		dataType: int64
		formatString: 0
		lineageTag: 6a7e4f43-93ed-4d26-97a9-6b46565ec130
		summarizeBy: none
		isDataTypeInferred

		annotation SummarizationSetBy = Automatic

	partition 'Customer Lookup' = m
		mode: import
		source =
				let
				    Source = Csv.Document(File.Contents("C:\Users\Bihaag Nepaul\Desktop\Adventure Works Raw Data\AdventureWorks Raw Data\AdventureWorks Customer Lookup.csv"),[Delimiter=",", Columns=13, Encoding=1252, QuoteStyle=QuoteStyle.None]),
				    #"Promoted Headers" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),
				    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"CustomerKey", Int64.Type}, {"Prefix", type text}, {"FirstName", type text}, {"LastName", type text}, {"BirthDate", type date}, {"MaritalStatus", type text}, {"Gender", type text}, {"EmailAddress", type text}, {"AnnualIncome", Int64.Type}, {"TotalChildren", Int64.Type}, {"EducationLevel", type text}, {"Occupation", type text}, {"HomeOwner", type text}}),
				    #"Removed Errors" = Table.RemoveRowsWithErrors(#"Changed Type", {"CustomerKey"}),
				    #"Removed Errors1" = Table.RemoveRowsWithErrors(#"Removed Errors", {"CustomerKey"}),
				    #"Filtered Rows" = Table.SelectRows(#"Removed Errors1", each [CustomerKey] <> null and [CustomerKey] <> ""),
				    #"Capitalized Each Word" = Table.TransformColumns(#"Filtered Rows",{{"Prefix", Text.Proper, type text}, {"FirstName", Text.Proper, type text}, {"LastName", Text.Proper, type text}}),
				    #"Inserted Full Name Column" = Table.AddColumn(#"Capitalized Each Word", "Full Name", each Text.Combine({[Prefix], [FirstName], [LastName]}, " "), type text),
				    #"Duplicated Column" = Table.DuplicateColumn(#"Inserted Full Name Column", "EmailAddress", "EmailAddress - Copy"),
				    #"Renamed Columns" = Table.RenameColumns(#"Duplicated Column",{{"EmailAddress - Copy", "Domain Name"}}),
				    #"Extracted Text After Delimiter" = Table.TransformColumns(#"Renamed Columns", {{"Domain Name", each Text.AfterDelimiter(_, "@"), type text}}),
				    #"Extracted Text Before Delimiter" = Table.TransformColumns(#"Extracted Text After Delimiter", {{"Domain Name", each Text.BeforeDelimiter(_, "."), type text}}),
				    #"Replaced Value" = Table.ReplaceValue(#"Extracted Text Before Delimiter","-"," ",Replacer.ReplaceText,{"Domain Name"}),
				    #"Capitalized Each Word1" = Table.TransformColumns(#"Replaced Value",{{"Domain Name", Text.Proper, type text}})
				in
				    #"Capitalized Each Word1"

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

